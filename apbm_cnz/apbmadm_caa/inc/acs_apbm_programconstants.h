#ifndef HEADER_GUARD_FILE__acs_apbm_programconstants
#define HEADER_GUARD_FILE__acs_apbm_programconstants acs_apbm_programconstants.h

/** @file acs_apbm_programconstants.h
 *	@brief
 *	@author xnicmut (Nicola Muto)
 *	@date 2011-07-18
 *
 *	COPYRIGHT Ericsson AB, 2010
 *	All rights reserved.
 *
 *	The information in this document is the property of Ericsson.
 *	Except as specifically authorized in writing by Ericsson, the receiver of
 *	this document shall keep the information contained herein confidential and
 *	shall protect the same in whole or in part from disclosure and dissemination
 *	to third parties. Disclosure and disseminations to the receivers employees
 *	shall only be made on a strict need to know basis.
 *
 *	REVISION INFO
 *	+=======+============+==============+=====================================+
 *	| REV   | DATE       | AUTHOR       | DESCRIPTION                         |
 *	+=======+============+==============+=====================================+
 *	| R-001 | 2011-07-18 | xnicmut      | Creation and first revision.        |
 *	+=======+============+==============+=====================================+
 *      |       | 2014-06-17 | xsunach	    | TR HS54933 		
 *      +=======+============+==============+=====================================+
 */

namespace acs_apbm {
	/** @brief APBM Server program return codes.
	 *
	 *	ProgramReturnCodeConstants enumeration detailed description
	 */
#define ACS_APBM_PROGRAM_RETURN_CODE_CONSTANTS_BASE 0
#define ACS_APBM_IPNA_STR	"192.168.169."
#define ACS_APBM_IPNB_STR	"192.168.170."
#define ACS_APBM_CLUSTER_IP1 "192.168.169.33"
#define ACS_APBM_CLUSTER_IP2 "192.168.170.33"
#define ACS_APBM_CLUSTER_IP3 "192.168.169.34"
#define ACS_APBM_CLUSTER_IP4 "192.168.170.34"
#define ACS_APBM_IPN_STR_LEN 12
#define ACS_APBM_DEFAULT_MAGAZINE_STR	"1.2.0.4"
#define ACS_APBM_DEFAULT_MAGAZINE_NUM	"1.2.0.4"
#define ACS_APBM_MAGAZINE_STRING_SEPARATOR '.'
#define ACS_APBM_MAGAZINE_SWITCH_BOARD_MAX_NUM 2
#define ACS_APBM_NOT_READY "NOTRDY"
#define ACS_APBM_UNSPEC "UNSPEC"
#define ACS_APBM_ACTION "ACTION"
#define ACS_APBM_ACCESS "ACCESS"
#define ACS_APBM_ABSENT "ABSENT"
#define ACS_APBM_IPMIUPG_BOOT_PATH "/data/apz/data/boot/"

	enum ProgramReturnCodeConstants {
		PROGRAM_EXIT_OK = ACS_APBM_PROGRAM_RETURN_CODE_CONSTANTS_BASE,
		PROGRAM_EXIT_ANOTHER_SERVER_RUNNING,
		PROGRAM_EXIT_BAD_INVOCATION,
		PROGRAM_EXIT_LOCK_FILE_OPEN_ERROR,
		PROGRAM_EXIT_LOCK_FILE_LOCKING_ERROR,
		PROGRAM_EXIT_IMM_MANAGEMENT_SESSION_OPEN_FAILURE,
		PROGRAM_EXIT_MEMORY_ALLOCATION_ERROR
	};

//#define ACS_APBM_ERROR_CONSTANTS_COUNT 44
	enum ProgramErrorConstants {
		PROGRAM_ERROR_VALUES_START = -3000,

		ERR_OWN_SLOT_UNDEFINED,
		ERR_INVALID_BOARD_INDEX
	};

	/** @brief Node state constants.
	 *
	 *	NodeStateConstants enumeration detailed description
	 */
	enum NodeStateConstants {
		NODE_STATE_UNDEFINED = 0,
		NODE_STATE_ACTIVE = 1,
		NODE_STATE_PASSIVE = 2
	};

	/** @brief Server Work Operation Code constants.
	 *
	 *	ServerWorkOperationCodeConstants enumeration detailed description
	 */
	enum ServerWorkOperationCodeConstants {
		SERVER_WORK_OPERATION_NOP = 0,
		SERVER_WORK_OPERATION_EXIT_PROGRAM,
		SERVER_WORK_OPERATION_INIT_SIGNALS_HANDLER,
		SERVER_WORK_OPERATION_START_WORK_NODE_ACTIVE,
		SERVER_WORK_OPERATION_START_WORK_NODE_PASSIVE,
		SERVER_WORK_OPERATION_START_WORK_NODE_UNDEFINED,
		SERVER_WORK_OPERATION_START_WORK_QUIESCED,
		SERVER_WORK_OPERATION_STOP_WORK_TO_EXIT_PROGRAM,
		SERVER_WORK_OPERATION_STOP_WORK_TO_CHANGE_STATE_TO_ACTIVE,
		SERVER_WORK_OPERATION_STOP_WORK_TO_CHANGE_STATE_TO_PASSIVE,
		SERVER_WORK_OPERATION_STOP_WORK_TO_CHANGE_STATE_TO_UNDEFINED,
		SERVER_WORK_OPERATION_STOP_WORK_TO_CHANGE_STATE_TO_QUIESCED,
		SERVER_WORK_OPERATION_ACTIVATE_SERVER_WORK_TASK,
		SERVER_WORK_OPERATION_IMM_OPEN_MANAGEMENT_SESSION,
		SERVER_WORK_OPERATION_IMM_TAKE_OWNERSHIP,
		SERVER_WORK_OPERATION_IMM_CLOSE_MANAGEMENT_SESSION,
		SERVER_WORK_OPERATION_IMM_RELEASE_OWNERSHIP,
		SERVER_WORK_OPERATION_API_SERVICE_ACCEPTOR_UNIX_OPEN,
		SERVER_WORK_OPERATION_API_SERVICE_ACCEPTOR_INET_OPEN,
		SERVER_WORK_OPERATION_API_SERVICE_ACCEPTOR_UNIX_CLOSE,
		SERVER_WORK_OPERATION_API_SERVICE_ACCEPTOR_INET_CLOSE,
		SERVER_WORK_OPERATION_CS_LOAD_BOARD_DATA,
		SERVER_WORK_OPERATION_CS_LOAD_BOARD_DATA_IMM,
		SERVER_WORK_OPERATION_SNMP_TRAP_SUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_TRAP_UNSUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_TRAP_UNSUBSCRIBE_LEFT,
		SERVER_WORK_OPERATION_SNMP_TRAP_UNSUBSCRIBE_RIGHT,
		SERVER_WORK_OPERATION_SNMP_TRAP_UNSUBSCRIBE_SUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_LOAD_BOARD_DATA,
		SERVER_WORK_OPERATION_SNMP_LOAD_BOARD_DATA_IMM,
		SERVER_WORK_OPERATION_SNMP_FIND_SWITCH_BOARD_MASTER,
		SERVER_WORK_OPERATION_SNMP_HWI_HANDLER_OPEN,
		SERVER_WORK_OPERATION_SNMP_HWI_RELOAD_DATA,
		SERVER_WORK_OPERATION_SNMP_HWI_HANDLER_CLOSE,
		SERVER_WORK_OPERATION_START_MONITORING_SERVICE,
		SERVER_WORK_OPERATION_STOP_MONITORING_SERVICE,
		SERVER_WORK_OPERATION_SNMP_TRAPDS_SUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_TRAPDS_UNSUBSCRIBE,
		SERVER_WORK_OPERATION_CS_HWC_TABLE_CHANGE_OBSERVER_START,
		SERVER_WORK_OPERATION_CS_HWC_TABLE_CHANGE_OBSERVER_STOP,
		SERVER_WORK_OPERATION_WORK_UNDEFINED_NODE_STATE_CHECK,
		SERVER_WORK_OPERATION_SHELF_MNGCTRL_TRAP_COUNTER_CHECK,

		SERVER_WORK_OPERATION_SNMP_MAGAZINE_TRAP_SUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_MAGAZINE_TRAP_UNSUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_MAGAZINE_TRAP_UNSUBSCRIBE_SUBSCRIBE,

		SERVER_WORK_OPERATION_SNMP_OTHER_MAGAZINES_TRAP_SUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_OTHER_MAGAZINES_TRAP_UNSUBSCRIBE,
		SERVER_WORK_OPERATION_SNMP_OTHER_MAGAZINES_TRAP_UNSUBSCRIBE_SUBSCRIBE,
		SERVER_WORK_OPERATION_UPDATE_BOARD_STATUS,				//HX62204

		SERVER_WORK_OPERATION_TESTING_NODE_ACTIVE_1,
		SERVER_WORK_OPERATION_SCX_COLD_TRAP_SCHEDULE,
		SERVER_WORK_OPERATION_SNMP_LOAD_BOARD_DATA_IMM_COLD,
		SERVER_WORK_OPERATION_SCX_LAG_IMM_HANDLER_OPEN,
		SERVER_WORK_OPERATION_SCX_LAG_IMM_HANDLER_CLOSE,
		SERVER_WORK_OPERATION_SCX_LAG_CONFIGURE_FAILURE_SIDEA,
		SERVER_WORK_OPERATION_SCX_LAG_CONFIGURE_FAILURE_SIDEB,
		SERVER_WORK_OPERATION_SCX_LAG_DISABLE_FAILURE_SIDEA,
		SERVER_WORK_OPERATION_SCX_LAG_DISABLE_FAILURE_SIDEB,
		SERVER_WORK_OPERATION_SCHEDULE_UPDATE_BOARD_STATUS,			//HX62204
		SERVER_WORK_OPERATION_CEASE_ALL_ALARMS_SHUTDOWN				//HX65505
	};

	/** @brief Program State constants constants.
	 *
	 *	ProgramStateConstants enumeration detailed description
	 */
	enum ProgramStateConstants {
		PROGRAM_STATE_RUNNING = 0,
		PROGRAM_STATE_EXIT_PROGRAM,
		PROGRAM_STATE_RESTART_FUNCTION,
		PROGRAM_STATE_STOP_WORKING,
		PROGRAM_STATE_RUNNING_NODE_ACTIVE,
		PROGRAM_STATE_RUNNING_NODE_PASSIVE,
		PROGRAM_STATE_RUNNING_NODE_UNDEFINED,
		PROGRAM_STATE_RUNNING_QUIESCED
	};

	/** @brief Board generic constants.
	 *
	 *	BoardGenericConstants enumeration detailed description
	 */
	enum BoardGenericConstants {
		//SWITCH_BOARD_COUNT = 2,
		BOARD_MAGAZINE_UNDEFINED = ~0U,
		BOARD_SLOT_UNDEFINED = -1,
	};

  enum BoardSlotPosition {
  	BOARD_SCB_LEFT = 0,
  	BOARD_SCXB_LEFT = 0,
  	BOARD_GEA = 2,
  	BOARD_DISK_LEFT = 12,
  	BOARD_APUB_LEFT = 14,
  	BOARD_DVD = 16,
  	BOARD_APUB_RIGHT = 20,
  	BOARD_DISK_RIGHT = 22,
  	BOARD_SCB_RIGHT = 25,
  	BOARD_SCXB_RIGHT = 25,
  };
}

#endif // HEADER_GUARD_FILE__acs_apbm_programconstants
