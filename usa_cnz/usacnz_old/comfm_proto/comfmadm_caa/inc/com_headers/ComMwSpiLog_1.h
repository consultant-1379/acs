#ifndef ComMwSpiLog_1_h_
#define ComMwSpiLog_1_h_

#include <stdint.h>
#include <ComMgmtSpiInterface_1.h>
#include <ComMgmtSpiCommon.h>

/**
 * Log interface.
 *
 * @file ComMwSpiLog_1.h
 *
 * The SPI basic function is to provide log information to the COM SA agent, implementing
 * the log service interface. The mapping of log information to physical logs are
 * determined by the agent implementation.
 * The log service can be used to write high-level cluster-significant information
 * suited primarily for network administrators or system administrators.
 * Thus, the log service does not need to support low-level implementation centric logging.
 *
 */


/**
 * The system is unusable.
 */
#define MW_SA_LOG_SEV_EMERGENCY	0
/**
 * Action must be taken immediately.
 */
#define MW_SA_LOG_SEV_ALERT		1
/**
 * Critical condition.
 */
#define MW_SA_LOG_SEV_CRITICAL	2
/**
 * Error condition.
 */
#define MW_SA_LOG_SEV_ERROR		3
/**
 * Warning condition.
 */
#define MW_SA_LOG_SEV_WARNING	4
/**
 * Normal but significant condition.
 */
#define MW_SA_LOG_SEV_NOTICE	5
/**
 * Informative message.
 */
#define MW_SA_LOG_SEV_INFO		6
/**
 * The MwSpiSeverityT type is used to specify the severity level of a log record.
 * The severity levels are as follows:
 * @li EMERGENCY - The system is unusable.
 * @li ALERT - Action must be taken immediately.
 * @li CRITICAL - Critical condition.
 * @li ERROR - Error condition.
 * @li WARNING - Warning condition.
 * @li NOTICE - Normal but significant condition.
 * @li INFO - Informative message.
 *
 * The numerical codes are according to IETF RFC 5424, the Syslog Protocol.
 */
typedef uint16_t MwSpiSeverityT;

/**
 * The MwSpiFacilityT type is specifying which type of log file (audit log, daemon log, etc) the messages will be written to.
 *
 * The numerical codes are according to IETF RFC 5424, the Syslog Protocol and extended with:
 * 100	alarm log record generated by Fault Management
 * 101	alert log record generated by Fault Management
 */
typedef uint16_t MwSpiFacilityT;

/**
 * Log interface.
 * The interface supports write operations to the log.
 */
typedef struct ComMwSpiLog_1 {
    /**
     * Common interface description.
     * The "base class" for this interface. Contains component name, interface name and interface version.
     */
    ComMgmtSpiInterface_1T base;
    /**
     * Writes a new entry in the system log.
     *
     * @param[in] eventId Internationalization data. A number represents the event.
     * The parameter is not specified if the value is zero.
     *
     * @param[in] severity Severity level of the event.
     *
     * @param[in] facility The  facility  argument is used to specify what
     * type of program is logging the message.
     *
     * @param[in] databuffer Pointer to a null character terminated character buffer containing the new log data, that is
     * all printable ASCII characters.
     *
     * @return ComOk or ComFailure.
     */
    ComReturnT (*logWrite) (uint32_t eventId, MwSpiSeverityT severity, MwSpiFacilityT facility, const char* databuffer);
} ComMwSpiLog_1T;

#endif
