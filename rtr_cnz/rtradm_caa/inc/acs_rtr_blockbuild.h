
/*=================================================================== */
/**
   @file   acs_rtr_blockbuild.h

   @brief Header file for rtr module.

          This module contains all the declarations useful to
          specify the class.

   @version 1.0.0
*/
/*
   HISTORY
   This section contains reference to problem report and related
   software correction performed inside this module


   PR           DATE      INITIALS    DESCRIPTION
   -----------------------------------------------------------
   N/A       22/01/2013   XHARBAV   Initial Release
==================================================================== */
/*====================================================================
                        INCLUDE DECLARATION SECTION
==================================================================== */
#include "acs_rtr_lib.h"
#include "ace/ACE.h"
/*====================================================================
                        DEFINE DECLARATION SECTION
==================================================================== */
#ifndef ACS_RTR_blockBuild_h
#define ACS_RTR_blockBuild_h
/*====================================================================
                        ENUMERATION DECLARATION SECTION
==================================================================== */
/*=================================================================== */
/**
   @brief  restartProcedure
 */
/*=================================================================== */
enum restartProcedure
{
  dontMove,
  moveBN_blC,
  moveBN_GOH
};
/*=================================================================== */
/**
   @brief  BlockLengthType
 */
/*=================================================================== */
enum BlockLengthType
{
  LENGTH_FIXED,
  LENGTH_EVEN,
  LENGTH_VARIABLE
};
/*=====================================================================
                        CLASS DECLARATION SECTION
==================================================================== */
/*===================================================================*/
/**
      @brief     RTRblock
*/
/*=================================================================== */
class RTRblock
{
/*=====================================================================
                        PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=====================================================================
                                CLASS CONSTRUCTORS
==================================================================== */
/*=================================================================== */
/**
      @brief           Constructor for RTRblock class.

      @param           blockSize

      @param           rtrParams
*/
/*=================================================================== */
	RTRblock(unsigned int blockSize, const RTRMS_Parameters* rtrParams);
/*=====================================================================
                                CLASS DESTRUCTORS
==================================================================== */
	virtual ~RTRblock();
/*=================================================================== */
/**
      @brief           store

      @param           ln

      @param           buf

      @return          void
*/
/*=================================================================== */
	void store(const ACE_UINT32 ln,
			   const unsigned char* buf);
/*=================================================================== */
/**
      @brief           enoughSpace

      @param           bufln

      @return          bool
*/
/*=================================================================== */
	bool enoughSpace(const ACE_UINT32 bufln) const;
/*=================================================================== */
/**
      @brief           getSendData

      @param           buf

      @param           bufln

      @return          bool
*/
/*=================================================================== */
	bool getSendData(char* buf,int& bufln);
	//bool lastBlock(void);
/*=================================================================== */
/**
      @brief           getBlockNumber

      @return          unsigned int
*/
/*=================================================================== */
	unsigned int getBlockNumber(void);
/*=================================================================== */
/**
      @brief           getNumberOfMessages

      @return          unsigned int
*/
/*=================================================================== */
	unsigned int getNumberOfMessages(void);
/*=================================================================== */
/**
      @brief           setBlockNumber

      @param           blockNo 

      @return          unsigned int
*/
/*=================================================================== */
	void setBlockNumber(ACE_UINT32 blockNo);
/*=================================================================== */
/**
      @brief           getBSize

      @return          unsigned int
*/
/*=================================================================== */
	unsigned int getBSize();
/*=================================================================== */
/**
      @brief           getBlockLength

      @return          unsigned int
*/
/*=================================================================== */
	inline unsigned int getBlockLength() { return blockLn; }
/*=================================================================== */
/**
      @brief           getBlockHoldTime

      @return          ACE_INT32
*/
/*=================================================================== */
	inline ACE_INT32 getBlockHoldTime() { return holdTime; }
/*=====================================================================
                        PRIVATE DECLARATION SECTION
==================================================================== */
private:
/*=================================================================== */
/**
      @brief           blockLengthType
*/
/*=================================================================== */
	BlockLengthType blockLengthType;
/*=================================================================== */
/**
      @brief           parBlockLen
*/
/*=================================================================== */
	ACE_INT32 parBlockLen;
/*=================================================================== */
/**
      @brief           holdTime
*/
/*=================================================================== */
	ACE_INT32 holdTime;
/*=================================================================== */
/**
      @brief           blockNumber
*/
/*=================================================================== */
	unsigned int blockNumber;
/*=================================================================== */
/**
      @brief           blockBuf
*/
/*=================================================================== */
	char* blockBuf;
/*=================================================================== */
/**
      @brief           blockLn
*/
/*=================================================================== */
	unsigned int blockLn;
/*=================================================================== */
/**
      @brief           noOfMessages
*/
/*=================================================================== */
	unsigned int noOfMessages;
/*=================================================================== */
/**
      @brief           accSizeInd
*/
/*=================================================================== */
	unsigned int accSizeInd;
/*=================================================================== */
/**
      @brief           blockSpaceLeft
*/
/*=================================================================== */
	unsigned int blockSpaceLeft;

/*=================================================================== */
/**
      @brief           lastBlockInTransaction
*/
/*=================================================================== */
	bool lastBlockInTransaction;
};

#endif
