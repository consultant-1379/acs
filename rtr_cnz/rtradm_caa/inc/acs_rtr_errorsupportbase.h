/*=================================================================== */
/**
   @file  acs_rtr_errorsupportbase.h 

   @brief Header file for rtr module.

          This module contains all the declarations useful to
          specify the class.

   @version 1.0.0
*/
/*
   HISTORY
   This section contains reference to problem report and related
   software correction performed inside this module


   PR           DATE      INITIALS    DESCRIPTION
   -----------------------------------------------------------
   N/A       23/01/2013   XHARBAV   Initial Release
==================================================================== */

/*=====================================================================
                          DIRECTIVE DECLARATION SECTION
==================================================================== */
#ifndef _ACS_RTR_ERROR_SUPPORT_BASE_H_
#define _ACS_RTR_ERROR_SUPPORT_BASE_H_
/*=====================================================================
                          INCLUDE DECLARATION SECTION
==================================================================== */
#include <cstring>
/*=====================================================================
                          CLASS DECLARATION SECTION
==================================================================== */
/*=================================================================== */
/**
   @brief        ACS_RTR_ErrorSupportBase

 */
/*=================================================================== */
class ACS_RTR_ErrorSupportBase {
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=====================================================================
                          CONSTANT DECLARATION SECTION
==================================================================== */
/*=================================================================== */
/**
   @brief        ESB_NO_ERROR
 */
/*=================================================================== */
	static const int ESB_NO_ERROR = 0; //NO error
/*=====================================================================
                          CLASS CONSTRUCTOR
==================================================================== */
/*=================================================================== */
/**
   @brief        Constructor for ACS_RTR_ErrorSupportBase class.
 */
/*=================================================================== */
	inline ACS_RTR_ErrorSupportBase() : _lastError(ESB_NO_ERROR), _lastErrorDescription(0), _buffer(0), _bufferSize(0) {}
/*=====================================================================
                          PRIVATE DECLARATION SECTION
==================================================================== */
private:
/*=================================================================== */
/**
   @brief        Constructor for ACS_RTR_ErrorSupportBase class.

   @param        rhs
                  Object of ACS_RTR_ErrorSupportBase class.
 */
/*=================================================================== */
	inline ACS_RTR_ErrorSupportBase(const ACS_RTR_ErrorSupportBase & rhs) { (void)rhs;}
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=====================================================================
                          CLASS DESTRUCTOR
==================================================================== */
/*=================================================================== */
/**
   @brief        Destructor for ACS_RTR_ErrorSupportBase class.
 */
/*=================================================================== */
	inline virtual ~ACS_RTR_ErrorSupportBase() { delete[] _buffer; }
/*=================================================================== */
/**
   @brief        lastError

   @param        int
 */
/*=================================================================== */
	inline int lastError() const { return _lastError; }
/*=================================================================== */
/**
   @brief        lastErrorDescription

   @param        char
 */
/*=================================================================== */
	inline const char * lastErrorDescription() const { return _lastErrorDescription; }
/*=====================================================================
                          PROTECTED DECLARATION SECTION
==================================================================== */
protected:
/*=================================================================== */
/**
   @brief        setLastError

   @param        error

   @param        description

   @param        allocate

   @return       bool 
 */
/*=================================================================== */
	bool setLastError(int error = ESB_NO_ERROR, const char * description = 0, bool allocate = false);
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=================================================================== */
/**
   @brief        operator=
 */
/*=================================================================== */
	ACS_RTR_ErrorSupportBase & operator=(const ACS_RTR_ErrorSupportBase & rhs) throw();
/*=====================================================================
                          PRIVATE DECLARATION SECTION
==================================================================== */
private:
/*=================================================================== */
/**
   @brief        _lastError
 */
/*=================================================================== */
	int _lastError;
/*=================================================================== */
/**
   @brief        _lastErrorDescription
 */
/*=================================================================== */
	const char * _lastErrorDescription;
/*=================================================================== */
/**
   @brief        _buffer
 */
/*=================================================================== */
	char * _buffer;
/*=================================================================== */
/**
   @brief        _bufferSize
 */
/*=================================================================== */
	size_t _bufferSize;
};

#endif //_ACS_RTR_ERROR_SUPPORT_BASE_H_
