#ifndef _ACS_LM_TRACE_H_
#define _ACS_LM_TRACE_H_
/*=====================================================================
                        DIRECTIVE DECLARATION SECTION
==================================================================== */

#include "ACS_TRA_trace.h"
#include <strstream>

/*=====================================================================
                        CLASS DECLARATION SECTION
==================================================================== */
class ACS_LM_Trace : public std::ostrstream
{
public:
	/*===================================================================
		   						  PUBLIC ATTRIBUTE
	=================================================================== */

	/*===================================================================
		   							   PUBLIC METHOD
	=================================================================== *
	/*=================================================================== */
	/**
				@brief       Default destructor for ACS_LM_Trace

				@par         None

				@pre         None

				@post        None

				@exception   None
	 */
	/*=================================================================== */
	ACS_LM_Trace(const char* aName);
	/*=================================================================== */
	/**
	 *  @brief print
	 *
	 *  @return void
	 */
	/*=================================================================== */
	void print();

	enum // should be private; are not because of SunCC bug
	{
		bufferSize = 1024,
				nameSize = 80
	};
	/*=================================================================== */
	/**
	 *  @brief isActive
	 *
	 *  @return bool						 : true/false
	 */
	/*=================================================================== */
	inline bool isActive() const
	{
		return (ACS_TRA_ON(theTrace) != 0);
	}

private:
	/*===================================================================
								 PRIVATE ATTRIBUTE
	=================================================================== */

	/*===================================================================
								 PRIVATE METHOD
	=================================================================== */
	char theBuffer[bufferSize];
	char theName[nameSize];
	ACS_TRA_trace theTrace;

private:
	//*=================================================================== */
	/**
				@brief      copy constructor
	 */
	/*=================================================================== */
	ACS_LM_Trace(const ACS_LM_Trace&); // disabled
	//*=================================================================== */
	/**
						@brief      operator
	 */
	/*=================================================================== */
	void operator=(const ACS_LM_Trace&); // disabled
};
#endif
