/*=================================================================== */
/**
   @file  acs_rtr_filereport.h 

   @brief Header file for rtr module.

          This module contains all the declarations useful to
          specify the class.

   @version 1.0.0
*/
/*
   HISTORY
   This section contains reference to problem report and related
   software correction performed inside this module


   PR           DATE      INITIALS    DESCRIPTION
   -----------------------------------------------------------
   N/A       24/01/2013   XHARBAV   Initial Release
==================================================================== */

/*=====================================================================
                          DIRECTIVE DECLARATION SECTION
==================================================================== */
#ifndef ACS_RTR_fileReport_h
#define ACS_RTR_fileReport_h
/*=====================================================================
                          INCLUDE DECLARATION SECTION
==================================================================== */
#include <string>
#include "ace/ACE.h"
#include "aes_ohi_filehandler.h"
/*=====================================================================
                          CLASS DECLARATION SECTION
==================================================================== */
/*=================================================================== */
/**
   @brief      RTRfileReporter
 */
/*=================================================================== */
class RTRfileReporter {
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=====================================================================
                          CONSTANT DECLARATION SECTION
==================================================================== */
/*=================================================================== */
/**
   @brief      FILE_NO_ERROR
 */
/*=================================================================== */
	static const int FILE_NO_ERROR = 0;
/*=================================================================== */
/**
   @brief      FILE_MAX_RETRIES_ON_ERROR
 */
/*=================================================================== */
	static const int FILE_MAX_RETRIES_ON_ERROR = 20;
/*=================================================================== */
/**
   @brief      FILE_DETACH_WAIT
 */
/*=================================================================== */
	static const int FILE_DETACH_WAIT = 200;
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=====================================================================
                          CLASS CONSTRUCTOR
==================================================================== */
/*=================================================================== */
/**
   @brief      Constructor for RTRfileReporter class.

   @param      subSys

   @param      appName

   @param      filedest

   @param      evtext

   @param      path 
 */
/*=================================================================== */
	RTRfileReporter(const char* subSys, const char* appName, const char* filedest, const char* evtext, const char* path);
/*=================================================================== */
/**
   @brief      Constructor for RTRfileReporter class.

   @param      subSys

   @param      appName

   @param      filedest

   @param      evtext
 */
/*=================================================================== */
	RTRfileReporter(const char* subSys,	const char* appName, const char* filedest, const char* evtext);
/*=====================================================================
                          CLASS DESTRUCTOR
==================================================================== */
public:
    virtual ~RTRfileReporter();
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=================================================================== */
/**
   @brief      attachGOH

   @param      err

   @return     bool
 */
/*=================================================================== */
	bool attachGOH(unsigned int& err);
/*=================================================================== */
/**
   @brief      sendGOH

   @param      string

   @param      err

   @return     bool
 */
/*=================================================================== */
	bool sendGOH(const std::string,unsigned int& err);
/*=================================================================== */
/**
   @brief      HandleGOHevent

   @return     void
 */
/*=================================================================== */
    void HandleGOHevent(void);
/*=================================================================== */
/**
   @brief      tooManyFailedAttempts

   @return     bool
 */
/*=================================================================== */
	bool tooManyFailedAttempts(void);
/*=================================================================== */
/**
   @brief      GetFailedAttempts

   @param      nFailed

   @return     void
 */
/*=================================================================== */
	void GetFailedAttempts(int& nFailed);
/*=================================================================== */
/**
   @brief      detach

   @param      srcLine

   @return     unsigned
 */
/*=================================================================== */
	unsigned detach(int srcLine = 0);
/*=================================================================== */
/**
   @brief      getEventHandle

   @return     ACE_Semaphore
 */
/*=================================================================== */
	ACE_Semaphore* getEventHandle();
/*=====================================================================
                          PRIVATE DECLARATION SECTION
==================================================================== */
private:
/*=================================================================== */
/**
   @brief      operator=
 */
/*=================================================================== */
	RTRfileReporter& operator=(const RTRfileReporter&);
/*=====================================================================
                          PUBLIC DECLARATION SECTION
==================================================================== */
public:
/*=================================================================== */
/**
   @brief      connected
 */
/*=================================================================== */
	bool connected;
/*=====================================================================
                          PRIVATE DECLARATION SECTION
==================================================================== */
private:
/*=================================================================== */
/**
   @brief      fd
 */
/*=================================================================== */
	const std::string fd;
/*=================================================================== */
/**
   @brief      failedAttemptsCnt
 */
/*=================================================================== */
	int failedAttemptsCnt;
/*=================================================================== */
/**
   @brief      _fileHandler
 */
/*=================================================================== */
	AES_OHI_FileHandler * _fileHandler;
};

#endif
